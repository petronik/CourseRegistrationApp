// <auto-generated />
using System;
using CourseRegistrationApp.Data.SqlRepo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CourseRegistrationApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210819042110_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("CourseRegistrationApp.Models.Courses", b =>
                {
                    b.Property<int>("C_CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("C_CourseDescrip")
                        .HasColumnType("longtext");

                    b.Property<string>("C_CourseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("C_CourseNumber")
                        .HasColumnType("int");

                    b.Property<int?>("StudentsS_Id")
                        .HasColumnType("int");

                    b.HasKey("C_CourseId");

                    b.HasIndex("StudentsS_Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            C_CourseId = 101,
                            C_CourseDescrip = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            C_CourseName = "Homeopathy",
                            C_CourseNumber = 2400
                        },
                        new
                        {
                            C_CourseId = 102,
                            C_CourseDescrip = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            C_CourseName = "Astrology",
                            C_CourseNumber = 2410
                        },
                        new
                        {
                            C_CourseId = 103,
                            C_CourseDescrip = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            C_CourseName = "Programming",
                            C_CourseNumber = 2420
                        },
                        new
                        {
                            C_CourseId = 104,
                            C_CourseDescrip = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            C_CourseName = "Mathematics",
                            C_CourseNumber = 2430
                        });
                });

            modelBuilder.Entity("CourseRegistrationApp.Models.Student", b =>
                {
                    b.Property<int>("S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("C_CourseId")
                        .HasColumnType("int");

                    b.Property<string>("S_Email")
                        .HasColumnType("longtext");

                    b.Property<string>("S_FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("S_LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("S_PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("S_Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            S_Id = 3101,
                            C_CourseId = 104,
                            S_Email = "johnLenon@gmail.com",
                            S_FirstName = "John",
                            S_LastName = "Lenon",
                            S_PhoneNumber = "123-456-67890"
                        },
                        new
                        {
                            S_Id = 3102,
                            C_CourseId = 102,
                            S_Email = "ringoStarr@gmail.com",
                            S_FirstName = "Ringo",
                            S_LastName = "Starr",
                            S_PhoneNumber = "987-233-7755"
                        },
                        new
                        {
                            S_Id = 3103,
                            C_CourseId = 104,
                            S_Email = "paulmccartney@gmail.com",
                            S_FirstName = "Paul",
                            S_LastName = "McCartney",
                            S_PhoneNumber = "321-654-4532"
                        },
                        new
                        {
                            S_Id = 3104,
                            C_CourseId = 102,
                            S_Email = "georgeharrison@gmail.com",
                            S_FirstName = "Geordge",
                            S_LastName = "Harrison",
                            S_PhoneNumber = "233-342-7754"
                        },
                        new
                        {
                            S_Id = 3105,
                            C_CourseId = 103,
                            S_Email = "stevenLenon@gmail.com",
                            S_FirstName = "Steven",
                            S_LastName = "Lenon",
                            S_PhoneNumber = "123-456-67890"
                        },
                        new
                        {
                            S_Id = 3106,
                            C_CourseId = 103,
                            S_Email = "rogerStarr@gmail.com",
                            S_FirstName = "Roger",
                            S_LastName = "Starr",
                            S_PhoneNumber = "987-233-7755"
                        },
                        new
                        {
                            S_Id = 3107,
                            C_CourseId = 103,
                            S_Email = "bobmccartney@gmail.com",
                            S_FirstName = "Bob",
                            S_LastName = "McCartney",
                            S_PhoneNumber = "321-654-4532"
                        },
                        new
                        {
                            S_Id = 3108,
                            C_CourseId = 103,
                            S_Email = "briantharrison@gmail.com",
                            S_FirstName = "Briant",
                            S_LastName = "Harrison",
                            S_PhoneNumber = "233-342-7754"
                        });
                });

            modelBuilder.Entity("CourseRegistrationApp.Models.Courses", b =>
                {
                    b.HasOne("CourseRegistrationApp.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsS_Id");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
